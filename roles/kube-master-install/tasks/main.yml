---
#- name: update kernel settings
#  become: yes
#  sysctl:
#    name: net.bridge.bridge-nf-call-iptables
#    value: 1
#    sysctl_set: yes
#    state: present
#    reload: yes

- name: Update kernel settings
  shell: "echo 'net.bridge.bridge-nf-call-iptables=1' | sudo tee -a /etc/sysctl.conf"

- name: restartng kernel settings
  command: "sysctl -p" 
  ignore_errors: true 


- name: install the latest version of Docker
  yum:
    name: docker
    state: latest

- name: enabling docker service
  service:
    name: docker
    enabled: yes

- name: Starting docker service
  service:
    name: docker
    state: started

- name: Adding kubernetes repo to yum
  yum_repository:
    name: Kubernetes
    description: Kubernetes
    file: kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    mirrorlist: http://mirrorlist.repoforge.org/el7/mirrors-rpmforge
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude: kubelet kubeadm kubectl

- name: Put SELinux in permissive mode, logging actions that would be blocked.
  #command: "setenforce 0"
  shell: "setenforce 0"
  ignore_errors: true

- name: updating /etc/selinux/config file
  command: "sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config"


- name: installing kubelet kubeadm kubectl
  command: yum install -y kubelet kubeadm kubectl --disableexcludes=Kubernetes

- name: enabling kubelet service
  service:
    name: kubelet
    enabled: yes

- name: Initializing  control-plane node
  command: kubeadm init --pod-network-cidr=10.244.0.0/16
  register: __kubeadm_output

- name: saving kubeadm output to a file
  local_action: copy content={{ __kubeadm_output.stdout }} dest="{{ files_path }}/kubeadm_init_output"

- name: Exporting kubeconfig to env variables
  shell: 'echo "export KUBECONFIG=/etc/kubernetes/admin.conf" >> /etc/environment'

# - name: installing Pod network CNI
#   command: "kubectl apply -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml"
#   environment:
#      KUBECONFIG: /etc/kubernetes/admin.conf
#   tags:
#   - test

- name: installing Pod network CNI
  command: "kubectl apply -f \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d \'\n\')\""
  environment:
     KUBECONFIG: /etc/kubernetes/admin.conf
  tags:
    - test
