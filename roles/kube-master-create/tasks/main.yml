---
- name: Security group for Kubernetes master
  ec2_group:
    name: Kuberentes-master-SG
    description: Incoming connections to kube master
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        ports:
        - 6443
        cidr_ip: 0.0.0.0/0
        rule_desc: API server
      - proto: tcp
        ports:
        - 2379
        - 2380
        cidr_ip: 0.0.0.0/0
        rule_desc: ETCd 
      - proto: tcp
        ports:
        - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allowing SSH connection
      - proto: tcp
        ports:
        - 10250
        cidr_ip: 0.0.0.0/0
        rule_desc: Kubelet API server
      - proto: tcp
        ports:
        - 10251
        cidr_ip: 0.0.0.0/0
        rule_desc: sheduler
      - proto: tcp
        ports:
        - 10252
        cidr_ip: 0.0.0.0/0
        rule_desc: Controller
       - proto: tcp
        ports:
        - 179
        cidr_ip: 0.0.0.0/0
        rule_desc: Calico required ports
       - proto: tcp
        ports:
        - 4789
        cidr_ip: 0.0.0.0/0
        rule_desc: Calico required ports
       - proto: tcp
        ports:
        - 5473
        cidr_ip: 0.0.0.0/0
        rule_desc: Calico required ports
       - proto: tcp
        ports:
        - 4789
        cidr_ip: 0.0.0.0/0
        rule_desc: Calico required ports
      - proto: tcp
        ports:
        - 10252
        cidr_ip: 0.0.0.0/0
        rule_desc: Calico required ports
      - proto: tcp
        ports:
        - 443
        cidr_ip: 0.0.0.0/0
        rule_desc: Calico required ports
   
  register: __k8_master_SG
  tags:
    - Kubernetes_master_SG


- debug:
    #var: __k8_master_SG
    msg: "securtiy groupID is : {{ __k8_master_SG.group_id }}"
  tags:
    - create_instance


- name: Creating instance for Kubernetes master
  ec2:
    key_name: "{{ private_key }}"
    group_id: "{{ __k8_master_SG.group_id }}"
    instance_type: t2.large
    image: "{{ image_id }}"
    wait: yes
    wait_timeout: 200
    vpc_subnet_id: "{{ subnet_id }}"
    assign_public_ip: yes
    count_tag:
      Name: kubernetes_master
    exact_count: 1
    region: "{{ region }}"
    instance_tags:
        Name: kubernetes_master
  register: __k8_master_IP
  tags: 
    - create_instance

- debug: 
    var: __k8_master_IP
   # msg: "Public IP address of Jenkinsinstance: {{ __k8_master_IP['instances'][0]['public_ip'] }}"

- set_fact:
    k8_master_IP: "{{ __k8_master_IP['instances'][0]['public_ip'] }}"
  when: __k8_master_IP is changed

- set_fact:
    k8_master_IP: "{{  __k8_master_IP['tagged_instances'][0]['public_ip']  }}"
  when: __k8_master_IP is not changed

- name: addding ansible group
  add_host:
    name: '{{ k8_master_IP }}'
    groupname: k8_master

- name: wait for SSH to come up
  wait_for:
    host: "{{ k8_master_IP }}"
    port: 22
    state: started
